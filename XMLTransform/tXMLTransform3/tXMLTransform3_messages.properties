#
#Wed Feb 18 17:30:44 MSK 2015
AUTO_NS_XPATH_TBL.ITEM.DOCUMENT.ITEM.childXML=Child XML
AUTO_NS_XPATH_TBL.ITEM.DOCUMENT.ITEM.thisXML=This XML
AUTO_NS_XPATH_TBL.ITEM.DOCUMENT=XML Field
AUTO_NS_XPATH_TBL.ITEM.NS_XPATH=NS XPath
AUTO_NS_XPATH_TBL.NAME=Autosearch namespaces params
DESCRIPTION.NAME=Usage
DOCUMENT_COL.NAME=XML field
HELP=ru.croc.talend.help.tXMLTransform3
LONG_NAME=XML Transformation
MANUAL_NS_XPATH_TBL.ITEM.DOCUMENT.ITEM.childXML=Child XML
MANUAL_NS_XPATH_TBL.ITEM.DOCUMENT.ITEM.thisXML=This XML
MANUAL_NS_XPATH_TBL.ITEM.DOCUMENT=XML field
MANUAL_NS_XPATH_TBL.ITEM.NS_PREFIX=NS Prefix
MANUAL_NS_XPATH_TBL.ITEM.NS_URI=NS URI
MANUAL_NS_XPATH_TBL.NAME=Namespaces Map
NAME=tXMLTransform3
NSMODE.NAME=Namespaces
NS_TEXT_THIS.NAME=For this xml
NS_TEXT_CHILD.NAME=For child xml
NS_RUN_ONCE.NAME=Prepare namespace settings once
OUTPUT.LINK=Main
OUTPUT.MENU=Main
TRANSFORMATIONS.ITEM.ACTION.ITEM.addAttribute=addAttribute
TRANSFORMATIONS.ITEM.ACTION.ITEM.addNode=addNode
TRANSFORMATIONS.ITEM.ACTION.ITEM.changeNamespace=changeNamespace
TRANSFORMATIONS.ITEM.ACTION.ITEM.extract=extract
TRANSFORMATIONS.ITEM.ACTION.ITEM.filter=filter
TRANSFORMATIONS.ITEM.ACTION.ITEM.importAfter=importAfter
TRANSFORMATIONS.ITEM.ACTION.ITEM.importBefore=importBefore
TRANSFORMATIONS.ITEM.ACTION.ITEM.importNode=importNode
TRANSFORMATIONS.ITEM.ACTION.ITEM.insertAfter=insertAfter
TRANSFORMATIONS.ITEM.ACTION.ITEM.insertBefore=insertBefore
TRANSFORMATIONS.ITEM.ACTION.ITEM.removeAttribute=removeAttribute
TRANSFORMATIONS.ITEM.ACTION.ITEM.removeNode=removeNode
TRANSFORMATIONS.ITEM.ACTION.ITEM.setNodeName=setNodeName
TRANSFORMATIONS.ITEM.ACTION.ITEM.setNodeText=setNodeText
TRANSFORMATIONS.ITEM.ACTION.ITEM.setRoot=setRoot
TRANSFORMATIONS.ITEM.ACTION.ITEM.setVariable=setVariable
TRANSFORMATIONS.ITEM.ACTION=Action
TRANSFORMATIONS.ITEM.CONDITION=Condition
TRANSFORMATIONS.ITEM.P1=Param 1
TRANSFORMATIONS.ITEM.P2=Param 2
TRANSFORMATIONS.ITEM.P3=Param 3
TRANSFORMATIONS.ITEM.XPATH=XPath
TRANSFORMATIONS.NAME=Transformations
USE_NS_DEFAULT.NAME=Don't define (use default namespace)
USE_NS_AUTO.NAME=Autosearch namespaces
USE_NS_MANUAL.NAME=Manage namespaces manually
USE_NS_TEXT.NAME=Use prepared namespaces in format ("<prefix1>=<ns1>\\n<prefix2>=<ns2>...")
VARIABLES.ITEM.DEFAULT_VALUE=Default Value
VARIABLES.ITEM.NAME=Var Name
VARIABLES.ITEM.TYPE.ITEM.boolean=boolean
VARIABLES.ITEM.TYPE.ITEM.Document=Document
VARIABLES.ITEM.TYPE.ITEM.double=double
VARIABLES.ITEM.TYPE.ITEM.int=int
VARIABLES.ITEM.TYPE.ITEM.List=List
VARIABLES.ITEM.TYPE.ITEM.long=long
VARIABLES.ITEM.TYPE.ITEM.Object=Object
VARIABLES.ITEM.TYPE.ITEM.String=String
VARIABLES.ITEM.TYPE=Var Type
VARIABLES.NAME=Variables
DESCRIPTION.NAME=ACTIONS: \n \
---------------------------- \n \
        1. "addNode" - appends ONE new node with the name (param1) and text (param2*) at EACH (xPath); \n \
        2. "insertBefore" - adds ONE new node with the name (param1) and text (param2*) before EACH (xPath); \n \
        3. "insertAfter" - adds ONE new node with the name (param1) and text (param2*) after EACH (xPath); \n \
        4. "setNodeName" - sets the name (param1*) to the EACH node at (xPath); \n \
        5. "removeNode" - removes the node at (xPath); \n \
        6. "addAttribute" - adds ONE new attribute with name (param1) and value (param2*) to the EACH node at (xPath); \n \
        7. "removeAttribute" - removes attribute with name (param1) from the node at (xPath); \n \
        8. "setNodeText" - sets the text (param1*) to the node at EACH (xPath); \n \
        9. "importBefore" - imports nodes at (xPath = param2) of document (param1) before nodes at (xPath) of this document; \n \
        10. "importAfter" - imports nodes at (xPath = param2) of document (param1) after nodes at (xPath) of this document; \n \
        11. "importNode" - appends node from xml (param1) at xPath (param2) to this xml at (xPath); \n \
        12. "changeNamespace" - changes old ns (param1) in this xml to new ns (param3) with prefix (param2); \n \
        13. "filter" - filters this xml at (xPath) by filter (param1); \n \
        14. "setRoot" - sets root node to this xml using node at (xPath); \n \
        15. "extract" - extracts data to ITEM temporary variable from this xml at (xPath) by method (param1), \n \
                    transforms it by (param3) expression and puts it to output (param2*). \n \
                    Methods for (param1): \n \
                        TEXT - get text  \n \
                        NODE_TEXT - get node as text,  \n \
                        NODE_PRETTY_TEXT - get node as pretty text, \n \
                        NODE - copy node to a new org.dom4j.Document, \n \
                        LIST_TEXT - get text for each node and put it to List, \n \
                        LIST_NODE_TEXT - get each node as text and put it to List, \n \
                        LIST_NODE_PRETTY_TEXT - get each node as pretty text and put it to List, \n \
                        LIST_NODE - copy each node to a new org.dom4j.Document and put it to List \n \
                    All LIST_* methods do create NEW List and DON'T append items to existing list.
    16. "setVariable" - set variable, typed in (param1*), to value, defined in (param2). (xPath) value is not used. \n \
    ------------------------- \n \
    * List type is acceptable
